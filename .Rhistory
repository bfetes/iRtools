rename(Data = F2E021) %>%
mutate(Variable = "F2E021") %>%
left_join(Meta.Tables.2019 %>%
select(varName, varTitle, longDescription),
by = c("Variable" = "varName"))
tbl.IPEDS.Research.All <- bind_rows(tbl.Research.Private, tbl.Research.Public) %>%
mutate(Data = round(Data/1000)) %>%
mutate(varTitle = "IPEDS Research Dollars - Total amount") %>%
mutate(longDescription = "Research-Total amount (Dollars in thousands)")
#### Salary Outlays ####
tbl.SAL <- Get.IPEDS.Data(IPEDS2016, "SAL", "2016_IS") %>%
bind_rows(Get.IPEDS.Data(IPEDS2017, "SAL", "2017_IS")) %>%
bind_rows(Get.IPEDS.Data(IPEDS2018, "SAL", "2018_IS")) %>%
bind_rows(Get.IPEDS.Data(IPEDS2019, "SAL", "2019_IS")) %>%
arrange(UNITID, Year, ARANK) %>%
select(UNITID, Year, ARANK, SA09MCT, SA10MCT, SA11MCT, SA12MCT, SAOUTLT) %>%
mutate(Table = "Weighted Average Monthly Salary") %>%
filter(ARANK == "7" | ARANK == "1" |
ARANK == "2" | ARANK == "3") %>%
group_by(UNITID, Year, ARANK) %>%
mutate(SA09MCT = SA09MCT * 9,
SA10MCT = SA10MCT * 10,
SA11MCT = SA11MCT * 11,
SA12MCT = SA12MCT * 12) %>%
mutate(Derived.SAL = sum(SA09MCT, SA10MCT, SA11MCT, SA12MCT)) %>%
mutate(Salary.Outlay = round(SAOUTLT/Derived.SAL)) %>%
mutate(ARANK = factor(ARANK, levels = c(7, 1, 2, 3),
labels = c("All Ranks", "Professor", "Associate Professor", "Assistant Professor"))) %>%
mutate(Year = str_remove(Year, "_IS")) %>%
arrange(UNITID, Year, ARANK) %>%
select(UNITID, Year, Data = Salary.Outlay, Table, Variable = ARANK)  %>%
ungroup() %>%
mutate(varTitle = ifelse(Variable == "All Ranks", str_c(Table, " for ", Variable), str_c(Table, " for ", Variable, "s"))) %>%
mutate(longDescription = "This variable is derived by (SA09MCT * 9) + (SA10MCT * 10) + (SA11MCT * 11) + (SA12MCT * 12) == Total Months; SAOUTLT/Total months for Weighted Average Monthly Salaries")
#### Graduation Rates ####
tbl.GR200 <- Get.IPEDS.Data(IPEDS2016, "GR200_", "16") %>%
bind_rows(Get.IPEDS.Data(IPEDS2017, "GR200_", "17")) %>%
bind_rows(Get.IPEDS.Data(IPEDS2018, "GR200_", "18")) %>%
bind_rows(Get.IPEDS.Data(IPEDS2019, "GR200_", "19")) %>%
select(UNITID, Year, BAGR100, BAGR150, BAGR200) %>%
mutate(Year = str_c("20", Year)) %>%
mutate(Table = "Graduation Rates") %>%
gather(Variable, Data, BAGR100, BAGR150, BAGR200) %>%
left_join(Meta.Tables.2019 %>%
select(varName, varTitle, longDescription),
by = c("Variable" = "varName"))
#### Retention Rate ####
tbl.EF <- Get.IPEDS.Data(IPEDS2016, "EF", "2016D") %>%
bind_rows(Get.IPEDS.Data(IPEDS2017, "EF", "2017D")) %>%
bind_rows(Get.IPEDS.Data(IPEDS2018, "EF", "2018D")) %>%
bind_rows(Get.IPEDS.Data(IPEDS2019, "EF", "2019D")) %>%
select(UNITID, Year, RET_PCF) %>%
mutate(Year = str_remove(Year, "D")) %>%
mutate(Table = "Retention Rates") %>%
rename(Data = RET_PCF) %>%
mutate(Variable = "RET_PCF") %>%
left_join(Meta.Tables.2019 %>%
select(varName, varTitle, longDescription),
by = c("Variable" = "varName"))
#### Student Counts and Percents ####
tbl.DRVEF <- Get.IPEDS.Data(IPEDS2016, "DRVEF", "2016") %>%
bind_rows(Get.IPEDS.Data(IPEDS2017, "DRVEF", "2017")) %>%
bind_rows(Get.IPEDS.Data(IPEDS2018, "DRVEF", "2018")) %>%
bind_rows(Get.IPEDS.Data(IPEDS2019, "DRVEF", "2019")) %>%
select(UNITID, Year, ENRTOT, PCTENRW, PCTENRAN, PCTENRAS, PCTENRBK, PCTENRHS, PCTENRNH,
PCTENRWH, PCTENR2M, PCTENRUN, PCTENRNR) %>% # (Percent Women, Native Am, Asian, Black or AA, Hispanic, Hawaiian, 2more, unknownR Nonresident Alien)
group_by(UNITID, Year) %>%
mutate(Percent.SOC = sum(PCTENRAN, PCTENRAS, PCTENRBK, PCTENRHS, PCTENRNH, PCTENR2M)) %>%
mutate(Table = "Student Body") %>%
ungroup() %>%
gather(Variable, Data, ENRTOT, PCTENRW, PCTENRAN, PCTENRAS, PCTENRBK, PCTENRHS, PCTENRNH, PCTENRWH, PCTENR2M, PCTENRUN, PCTENRNR, Percent.SOC) %>%
mutate(Variable = recode(Variable,
"PCTENRAN" = "PctEnrAN",
"PCTENRBK" = "PctEnrBK",
"PCTENRHS" = "PctEnrHS",
"PCTENRWH" = "PctEnrWh",
"PCTENRUN" = "PctEnrUn",
"PCTENRNR" = "PctEnrNr")) %>%
left_join(Meta.Tables.2019 %>%
select(varName, varTitle, longDescription),
by = c("Variable" = "varName")) %>%
mutate(varTitle = ifelse(Variable == "Percent.SOC", "Percent of total enrollment that are students of color", varTitle)) %>%
mutate(longDescription = ifelse(Variable == "Percent.SOC", "This variable is derived by adding PCTENRAN, PCTENRAS, PCTENRBK, PCTENRHS, PCTENRNH, PCTENR2M", longDescription))
#### Student Costs and Charges ####
tbl.IC <- Get.IPEDS.Data(IPEDS2016, "IC", "2016_AY") %>%
bind_rows(Get.IPEDS.Data(IPEDS2017, "IC", "2017_AY")) %>%
bind_rows(Get.IPEDS.Data(IPEDS2018, "IC", "2018_AY")) %>%
bind_rows(Get.IPEDS.Data(IPEDS2019, "IC", "2019_AY")) %>%
mutate(Year = str_remove(Year, "_AY")) %>%
select(UNITID, Year, CHG3AT3, CHG3AF3, CHG3AY3, CHG4AY3, CHG5AY3, CHG6AY3) %>%
mutate(Table = "Student Costs and Charges") %>%
gather(Variable, Data, CHG3AT3, CHG3AF3, CHG3AY3, CHG4AY3, CHG5AY3, CHG6AY3) %>%
mutate(Variable = tolower(Variable)) %>%
left_join(Meta.Tables.2019 %>%
select(varName, varTitle, longDescription),
by = c("Variable" = "varName"))
########################### Academic Strategic Planning Steering Committee #################
#### Faculty-Student Ratio ####
tbl.FacStuRatio <- tbl(IPEDS2016, "EF2016D") %>%
mutate(Year = "2016") %>%
select(UNITID, Year, STUFACR) %>%
collect() %>%
bind_rows(tbl(IPEDS2017, "EF2017D") %>%
mutate(Year = "2017") %>%
select(UNITID, Year, STUFACR) %>%
collect()) %>%
bind_rows(tbl(IPEDS2018, "EF2018D") %>%
mutate(Year = "2018") %>%
select(UNITID, Year, STUFACR) %>%
collect()) %>%
bind_rows(tbl(IPEDS2019, "EF2019D") %>%
mutate(Year = "2019") %>%
select(UNITID, Year, STUFACR) %>%
collect())
#### Enrollment ####
tbl.Enrollment <- tbl(IPEDS2016, "DRVEF122016") %>%
mutate(Year = "2016") %>%
select(UNITID, Year, FTE12MN, UNDUP) %>%
collect() %>%
bind_rows(tbl(IPEDS2017, "DRVEF122017") %>%
mutate(Year = "2017") %>%
select(UNITID, Year, FTE12MN, UNDUP) %>%
collect()) %>%
bind_rows(tbl(IPEDS2018, "DRVEF122018") %>%
mutate(Year = "2018") %>%
select(UNITID, Year, FTE12MN, UNDUP) %>%
collect()) %>%
bind_rows(tbl(IPEDS2019, "DRVEF122019") %>%
mutate(Year = "2019") %>%
select(UNITID, Year, FTE12MN, UNDUP) %>%
collect())
#### More Finance ####
tbl.Finance <-  tbl(IPEDS2016, "F1516_F2") %>%
mutate(Year = "2016") %>%
select(UNITID, Year, F2E137, F2C06, F2D012, F2D08A, F2H02, F2A03A, F2A19, F2E134, F2E135, F2E136, F2B02) %>%
collect()  %>%
bind_rows(tbl(IPEDS2017, "F1617_F2") %>%
mutate(Year = "2017") %>%
select(UNITID, Year, F2E137, F2C06, F2D012, F2D08A, F2H02, F2A03A, F2A19, F2E134, F2E135, F2E136, F2B02) %>%
collect())  %>%
bind_rows(tbl(IPEDS2018, "F1718_F2") %>%
mutate(Year = "2018") %>%
select(UNITID, Year, F2E137, F2C06, F2D012, F2D08A, F2H02, F2A03A, F2A19, F2E134, F2E135, F2E136, F2B02) %>%
collect()) %>%
bind_rows(tbl(IPEDS2019, "F1819_F2") %>%
mutate(Year = "2019") %>%
select(UNITID, Year, F2E137, F2C06, F2D012, F2D08A, F2H02, F2A03A, F2A19, F2E134, F2E135, F2E136, F2B02) %>%
collect())
#### Counts of Non-Faculty Employees and Salary Outlays ####
tbl.Employees.and.Salaries <- Get.IPEDS.Data(IPEDS2016, "SAL", "2016_NIS") %>%
bind_rows(Get.IPEDS.Data(IPEDS2017, "SAL", "2017_NIS")) %>%
bind_rows(Get.IPEDS.Data(IPEDS2018, "SAL", "2018_NIS")) %>%
bind_rows(Get.IPEDS.Data(IPEDS2019, "SAL", "2019_NIS"))  %>%
arrange(UNITID, Year) %>%
select(UNITID, Year, SANIN01, SANIT01, SANIN02, SANIT02, SANIN03, SANIT03, SANIN04, SANIT04,
SANIN05, SANIT05, SANIN06, SANIT06, SANIN07, SANIT07, SANIN08, SANIT08, SANIN09, SANIT09,
SANIN10, SANIT10, SANIN11, SANIT11, SANIN12, SANIT12, SANIN13, SANIT13, SANIN14, SANIT14) %>%
mutate(Year = str_remove(Year, "_NIS"),
Year = str_trim(Year))
#### Counts of Faculty ####
tbl.Faculty.Counts <- Get.IPEDS.Data(IPEDS2016, "S", "2016_SIS") %>%
bind_rows(Get.IPEDS.Data(IPEDS2017, "S", "2017_SIS")) %>%
bind_rows(Get.IPEDS.Data(IPEDS2018, "S", "2018_SIS")) %>%
bind_rows(Get.IPEDS.Data(IPEDS2019, "S", "2019_SIS")) %>%
filter(FACSTAT == 0) %>%
select(UNITID, Year, SISTOTL) %>%
mutate(Year = str_remove(Year, "_SIS"),
Year = str_trim(Year))
#### Final ASPSC Table ####
tbl.ASPSC.Main <- Institutional.Characteristics %>%
select(UNITID) %>%
left_join(tbl.FacStuRatio) %>%
arrange(UNITID) %>%
left_join(tbl.Enrollment) %>%
left_join(tbl.Finance) %>%
left_join(tbl.Employees.and.Salaries) %>%
left_join(tbl.Faculty.Counts) %>%
rename("Student.Faculty.Ratio" = "STUFACR",
"12 Month Student FTE" = "FTE12MN",
"12 Month Unduplicated Head Count" = "UNDUP")
#### Manual Calculations for ASPSC Table ####
ASPSC.Calculations <- tbl.ASPSC.Main %>%
left_join(tbl.DRVEF %>%
filter(Variable == "ENRTOT") %>%
select(UNITID, Year, ENRTOT = Data)) %>%
#filter(UNITID == "196413") %>%
mutate(`Non-Academic Staff to Academic Employee Ratio` = round(SANIN01/SISTOTL, 2)) %>%
mutate(`Non-Academic Staff to Student Ratio` = round(ENRTOT/SANIN01, 2)) %>%
mutate(`Non-Compensation Expenses per Faculty` = round((F2E134 + F2E137)/SISTOTL, 2)) %>%
mutate(`Non-Compensation Expenses per Student` = round((F2E134 + F2E137)/ENRTOT, 2)) %>%
mutate(`Interest and Depreciation as a Percent of Total Operating Expenses` = round((F2E135 + F2E136)/F2B02, 2)*100) %>%
mutate(`Unrestricted Financial Aid as a Percentage of Gross Tuition` = round(F2C06/(F2D012 + F2C06), 2)*100) %>%
mutate(`Debt as Percent of Endowment` = round(F2A03A/F2H02, 2)*100) %>%
mutate(`Debt as Percent of Operating Expenses` = round(F2A03A/F2B02, 2)* 100) %>%
mutate(`Debt Percent to Net PPE` = round(F2A03A/F2A19, 2)*100) %>%
mutate(Table = NA) %>%
select(UNITID, Year, Table,
`Student to Faculty Ratio` = Student.Faculty.Ratio,
`Non-Academic Staff to Academic Employee Ratio`,
`Non-Academic Staff to Student Ratio`,
`Non-Compensation Expenses per Faculty`,
`Non-Compensation Expenses per Student`,
`Interest and Depreciation as a Percent of Total Operating Expenses`,
`Net Tutition` = F2D012,
`Unrestricted Financial Aid as a Percentage of Gross Tuition`,
`Debt as Percent of Endowment`,
`Debt as Percent of Operating Expenses`,
`Debt Percent to Net PPE`) %>%
gather(Variable, Data, -UNITID, -Year, -Table) %>%
arrange(UNITID, Variable, Year) %>%
mutate(Table = case_when(Variable == "Debt as Percent of Endowment" ~ "Debt",
Variable == "Debt as Percent of Operating Expenses" ~ "Debt",
Variable == "Debt Percent to Net PPE" ~ "Debt",
Variable == "Net Tutition" ~ "Revenue",
Variable == "Unrestricted Financial Aid as a Percentage of Gross Tuition" ~ "Revenue",
Variable == "Interest and Depreciation as a Percent of Total Operating Expenses" ~ "Expenses",
Variable == "Non-Compensation Expenses per Student" ~ "Expenses",
Variable == "Non-Compensation Expenses per Faculty" ~ "Expenses",
Variable == "Non-Academic Staff to Student Ratio" ~ "Expenses",
Variable == "Non-Academic Staff to Academic Employee Ratio" ~ "Expenses",
Variable == "Student to Faculty Ratio" ~ "Expenses")) %>%
mutate(varTitle = Variable)
View(ASPSC.Calculations)
View(Institutional.Characteristics)
#########################################################################
####################### Use ASQ Data to get additional schools ####
#### Load ASQ Data ####
load("G:/AAF/OIRA/Proj/R User Group/Data Sets/datasets_surveys/asq_school_attending_applied_outcomes_rank.Rdata")
ASQ.Historical.Program.Plans <- import('G:/AAF/ASQ/ASQ_All Years Data/Historical Program and Plan Data/Historical Program and Plan Data.Rdata') %>%
mutate(`Survey Year` = as.character(ASQ.Year)) %>%
select(Emplid, `Survey Year`, Dec.Acad.Program, Plan.Group) %>%
distinct()
#### Dual Programs ####
ASQ.Mod <- asq_school_attending_applied_outcomes_rank %>%
filter(admission_type != "ED") %>%
select(Emplid, `Survey Year`, Dec.Acad.Program) %>%
separate(Dec.Acad.Program, into = c("Major1", "Major2"), sep = "/") %>%
gather(Junk, Dec.Acad.Program, Major1, Major2) %>%
left_join(ASQ.Historical.Program.Plans) %>%
mutate(Plan.Group = ifelse(Plan.Group == "Social Sciences", "MA", NA)) %>%
gather(Junk2, Dec.Acad.Program, Dec.Acad.Program, Plan.Group) %>%
select(-contains("Junk")) %>%
filter(!is.na(Dec.Acad.Program)) %>%
distinct(Emplid, `Survey Year`, Dec.Acad.Program) %>%
left_join(asq_school_attending_applied_outcomes_rank %>%
select(Emplid, `Survey Year`, contains('applied_choice'))) %>%
select(-contains('outcome')) %>%
mutate(Dec.Acad.Program = recode(Dec.Acad.Program,
"AS" = "Arts & Sciences",
"AR" = "Architecture",
"EC" = "ECS",
"ED" = "Education",
"IS" = "iSchool",
"MA" = "Maxwell",
"MG" = "Whitman",
"PC" = "Newhouse",
"SH" = "Falk"))
#### Load and Clean OPEID Codes ####
load("G:/AAF/ASQ/ASQ_2021/IPEDS Data/IPEDS Data 2021.rData")
IPEDS.Data.Mod <- IPEDS.Data.2021 %>%
select(UnitID, Institution.Name, OPEID.Code, City, State, Zipcode) %>%
mutate(OPEID.COde = as.character(OPEID.Code)) %>%
mutate(UnitID = as.character(UnitID)) %>%
distinct() %>%
filter(str_detect(Institution.Name, "World Campus") == F &
str_detect(Institution.Name, "Professional Advancement") == F &
str_detect(Institution.Name, "Worldwide") == F &
str_detect(Institution.Name, "Online") == F &
str_detect(Institution.Name, "System") == F &
str_detect(Institution.Name, "Flex") == F &
str_detect(Institution.Name, "Continuing Studies") == F &
str_detect(Institution.Name, "University Center Campus") == F &
str_detect(Institution.Name, "Divinity School") == F)
#### Most Applied to Schools by Program ####
Program.Competitive.Schools <- ASQ.Mod %>%
select(Emplid,`Survey Year`, Dec.Acad.Program, applied_choice_1_2019, applied_choice_2_2019, applied_choice_3_2019, applied_choice_4_2019, applied_choice_5_2019) %>%
gather(Choice, Institution, contains("choice_")) %>%
arrange(Emplid) %>%
filter(Institution != "Syracuse University") %>%
filter(!is.na(Institution)) %>%
distinct() %>%
group_by(Dec.Acad.Program, Institution) %>%
summarise(School.Count = n()) %>%
ungroup() %>%
arrange(Dec.Acad.Program, desc(School.Count), Institution) %>%
group_by(Dec.Acad.Program) %>%
slice_max(order_by = School.Count, n = 15) %>%
ungroup() %>%
left_join(IPEDS.Data.Mod, by = c("Institution" = "Institution.Name")) %>%
select(UnitID, Institution) %>%
distinct()
Large.Masters.Schools <- ASQ.Mod %>%
select(Emplid,`Survey Year`, Dec.Acad.Program, applied_choice_1_2019, applied_choice_2_2019, applied_choice_3_2019, applied_choice_4_2019, applied_choice_5_2019) %>%
gather(Choice, Institution, contains("choice_")) %>%
arrange(Emplid) %>%
filter(Institution != "Syracuse University") %>%
filter(!is.na(Institution)) %>%
count(Institution) %>%
left_join(IPEDS.Data.Mod, by = c("Institution" = "Institution.Name")) %>%
select(UnitID, Institution, n) %>%
arrange(desc(n)) %>%
filter(n > 50)
########################################################################
###################### Load HERD Data ###########
HERD.2020 <- import("G:/AAF/OIRA/Proj/Carnegie Classification/2021 Carnegie Classification/herd_2020.csv")
HERD.2019 <- import("G:/AAF/OIRA/Proj/Carnegie Classification/2021 Carnegie Classification/herd_2019.csv")
HERD.2018 <- import("G:/AAF/OIRA/Proj/Carnegie Classification/2021 Carnegie Classification/herd_2018.csv")
HERD.Missing.IPEDS <- HERD.2020 %>%
bind_rows(HERD.2019) %>%
bind_rows(HERD.2018) %>%
select(Institution = inst_name_long, IPEDS.ID = ipeds_unitid, year, med_sch_flag, question, row, data) %>%
mutate(Institution = recode(Institution,
"University of Maryland, College Park" = "University of Maryland")) %>%
filter(question == "Source") %>%
filter(row == "Total") %>%
filter(is.na(IPEDS.ID)) %>%
left_join(Institutional.Characteristics %>%
select(UNITID, INSTNM), by = c("Institution" = "INSTNM")) %>%
arrange(UNITID, Institution) %>%
mutate(UNITID = as.numeric(UNITID)) %>%
mutate(UNITID = case_when(Institution == "Arizona State University" ~ 104151,
Institution == "University of New Hampshire" ~ 183044,
Institution == "Bowling Green State University" ~ 201441,
Institution == "Kent State University" ~ 203517,
Institution == "Miami University" ~ 204024,
Institution == "Ohio State University, The" ~ 204796,
Institution == "Ohio University" ~ 204857,
Institution == "University of Cincinnati" ~ 201885,
Institution == "University of Oklahoma, The, Norman and Health Science Center" ~ 207500,
Institution == "Wright State University" ~ 206604,
Institution == "University of Akron, The" ~ 200800,
Institution == "University of Maryland" ~ 163286,
Institution == "Vanderbilt University and Vanderbilt University Medical Center" ~ 221999,
Institution == "Western Michigan University and Homer Stryker M.D. School of Medicine" ~ 172699,
TRUE ~ UNITID)) %>%
mutate(IPEDS.ID = UNITID) %>%
filter(!is.na(IPEDS.ID)) %>%
group_by(IPEDS.ID, Institution) %>%
mutate(Check = n()) %>% ## Fix Maryland in 2018
select(-UNITID, -Check)
HERD.Mod <- HERD.2020 %>%
bind_rows(HERD.2019) %>%
bind_rows(HERD.2018) %>%
select(Institution = inst_name_long, IPEDS.ID = ipeds_unitid, year, med_sch_flag, question, row, data) %>%
mutate(Institution = recode(Institution,
"University of Maryland, College Park" = "University of Maryland")) %>%
filter(question == "Source") %>%
filter(row == "Total") %>%
filter(!is.na(IPEDS.ID)) %>%
bind_rows(HERD.Missing.IPEDS) %>%
mutate(Table = "Research",
Variable = "HERD",
varTitle = "HERD Research Dollars",
longDescription = "HERD Research Dollars (Dollars in thousands)") %>%
select(UNITID = IPEDS.ID, Year = year, Data = data, Table, Variable, varTitle, longDescription) %>%
mutate(Year = as.character(Year))
############################################################################################
###################################### Final IPEDS Data Set ###############################
#### Create Short Variable Names ####
Short.Variable.Names <- tbl.ADM %>%
bind_rows(tbl.DVADM) %>%
bind_rows(tbl.IPEDS.Research.All) %>%
bind_rows(HERD.Mod) %>%
bind_rows(tbl.SAL) %>%
bind_rows(tbl.GR200) %>%
bind_rows(tbl.EF) %>%
bind_rows(tbl.IC) %>%
